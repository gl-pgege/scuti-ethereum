
> sidechain@1.0.0 start
> node compile-and-deploy.js

{ contracts: { 'SideContest.sol': { SideContest: [Object] } },
  errors:
   [ { component: 'general',
       errorCode: '1878',
       formattedMessage:
        'SideContest.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n',
       message:
        'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
       severity: 'warning',
       sourceLocation: [Object],
       type: 'Warning' } ],
  sources: { 'SideContest.sol': { id: 0 } } }
[ { inputs: [ [Object] ],
    stateMutability: 'nonpayable',
    type: 'constructor' },
  { inputs: [ [Object] ],
    name: 'ContestData',
    outputs: [ [Object], [Object] ],
    stateMutability: 'view',
    type: 'function' },
  { inputs: [ [Object], [Object], [Object] ],
    name: 'contractSubmission',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function' },
  { inputs: [],
    name: 'goodlabs',
    outputs: [ [Object] ],
    stateMutability: 'view',
    type: 'function' } ]
{ contracts: { 'TestContest.sol': { TestContest: [Object] } },
  errors:
   [ { component: 'general',
       errorCode: '1878',
       formattedMessage:
        'TestContest.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n',
       message:
        'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
       severity: 'warning',
       sourceLocation: [Object],
       type: 'Warning' },
     { component: 'general',
       errorCode: '2018',
       formattedMessage:
        'TestContest.sol:51:5: Warning: Function state mutability can be restricted to pure\n    function getAddressZero() public view returns(address) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n',
       message: 'Function state mutability can be restricted to pure',
       severity: 'warning',
       sourceLocation: [Object],
       type: 'Warning' } ],
  sources: { 'TestContest.sol': { id: 0 } } }
[ { inputs: [ [Object], [Object], [Object] ],
    stateMutability: 'nonpayable',
    type: 'constructor' },
  { inputs: [ [Object] ],
    name: 'beginContract',
    outputs: [],
    stateMutability: 'payable',
    type: 'function' },
  { inputs: [],
    name: 'contractAmount',
    outputs: [ [Object] ],
    stateMutability: 'view',
    type: 'function' },
  { inputs: [],
    name: 'contractFunded',
    outputs: [ [Object] ],
    stateMutability: 'view',
    type: 'function' },
  { inputs: [],
    name: 'currentTime',
    outputs: [ [Object] ],
    stateMutability: 'view',
    type: 'function' },
  { inputs: [],
    name: 'endTime',
    outputs: [ [Object] ],
    stateMutability: 'view',
    type: 'function' },
  { inputs: [],
    name: 'getAddressZero',
    outputs: [ [Object] ],
    stateMutability: 'view',
    type: 'function' },
  { inputs: [],
    name: 'goodlabs',
    outputs: [ [Object] ],
    stateMutability: 'view',
    type: 'function' },
  { inputs: [],
    name: 'owner',
    outputs: [ [Object] ],
    stateMutability: 'view',
    type: 'function' },
  { inputs: [],
    name: 'ownerWithdrawal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function' },
  { inputs: [ [Object] ],
    name: 'winnerWithdrawal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function' } ]
0xA4340136Da3Af81887E39daFB17EF43120DdEB26
