Contract {
  setProvider: [Function (anonymous)],
  currentProvider: [Getter/Setter],
  _requestManager: RequestManager {
    provider: l {
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: 100,
      options: [Object],
      engine: [u],
      manager: [p],
      sendAsync: [Function: bound ],
      send: [Function: bound ],
      close: [Function: bound ],
      _queueRequest: [Function: bound ],
      _processRequestQueue: [Function: bound ],
      _requestQueue: [],
      _requestInProgress: false,
      [Symbol(kCapture)]: false
    },
    providers: {
      WebsocketProvider: [Function: WebsocketProvider],
      HttpProvider: [Function: HttpProvider],
      IpcProvider: [Function: IpcProvider]
    },
    subscriptions: Map(0) {}
  },
  givenProvider: null,
  providers: {
    WebsocketProvider: [Function: WebsocketProvider],
    HttpProvider: [Function: HttpProvider],
    IpcProvider: [Function: IpcProvider]
  },
  _provider: l {
    _events: [Object: null prototype] {
      data: [Function: data],
      connect: [Function: connect],
      error: [Function: error],
      close: [Function: disconnect],
      disconnect: [Function: disconnect]
    },
    _eventsCount: 5,
    _maxListeners: 100,
    options: {
      _chainId: 1,
      _chainIdRpc: 1337,
      vmErrorsOnRPCResponse: true,
      verbose: false,
      asyncRequestProcessing: false,
      logger: [Object],
      seed: 'hnTpwQ85OL',
      mnemonic: 'betray amused chuckle kit monster web wonder frame burst slim token become',
      network_id: 1625762463413,
      forkCacheSize: 1073741824,
      total_accounts: 10,
      gasPrice: '0x77359400',
      default_balance_ether: 100,
      unlocked_accounts: [],
      hdPath: "m/44'/60'/0'/0/",
      gasLimit: '0x6691b7',
      defaultTransactionGasLimit: '0x15f90',
      time: null,
      debug: false,
      hardfork: 'muirGlacier',
      allowUnlimitedContractSize: false
    },
    engine: u {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: 100,
      _blockTracker: [i],
      _ready: [i],
      currentBlock: [Object],
      _providers: [Array],
      manager: [p],
      _running: true,
      [Symbol(kCapture)]: false
    },
    manager: p {
      state: [S],
      options: [Object],
      initialized: true,
      initialization_error: null,
      post_initialization_callbacks: [],
      engine: [u],
      currentBlock: [Object]
    },
    sendAsync: [Function: bound ],
    send: [Function: bound ],
    close: [Function: bound ],
    _queueRequest: [Function: bound ],
    _processRequestQueue: [Function: bound ],
    _requestQueue: [],
    _requestInProgress: false,
    [Symbol(kCapture)]: false
  },
  setRequestManager: [Function (anonymous)],
  BatchRequest: [Function: bound Batch],
  extend: [Function: ex] {
    formatters: {
      inputDefaultBlockNumberFormatter: [Function: inputDefaultBlockNumberFormatter],
      inputBlockNumberFormatter: [Function: inputBlockNumberFormatter],
      inputCallFormatter: [Function: inputCallFormatter],
      inputTransactionFormatter: [Function: inputTransactionFormatter],
      inputAddressFormatter: [Function: inputAddressFormatter],
      inputPostFormatter: [Function: inputPostFormatter],
      inputLogFormatter: [Function: inputLogFormatter],
      inputSignFormatter: [Function: inputSignFormatter],
      inputStorageKeysFormatter: [Function: inputStorageKeysFormatter],
      outputProofFormatter: [Function: outputProofFormatter],
      outputBigNumberFormatter: [Function: outputBigNumberFormatter],
      outputTransactionFormatter: [Function: outputTransactionFormatter],
      outputTransactionReceiptFormatter: [Function: outputTransactionReceiptFormatter],
      outputBlockFormatter: [Function: outputBlockFormatter],
      outputLogFormatter: [Function: outputLogFormatter],
      outputPostFormatter: [Function: outputPostFormatter],
      outputSyncingFormatter: [Function: outputSyncingFormatter]
    },
    utils: {
      _fireError: [Function: _fireError],
      _jsonInterfaceMethodToString: [Function: _jsonInterfaceMethodToString],
      _flattenTypes: [Function: _flattenTypes],
      randomHex: [Function: randomHex],
      _: [Function],
      BN: [Function],
      isBN: [Function: isBN],
      isBigNumber: [Function: isBigNumber],
      isHex: [Function: isHex],
      isHexStrict: [Function: isHexStrict],
      sha3: [Function],
      sha3Raw: [Function: sha3Raw],
      keccak256: [Function],
      soliditySha3: [Function: soliditySha3],
      soliditySha3Raw: [Function: soliditySha3Raw],
      encodePacked: [Function: encodePacked],
      isAddress: [Function: isAddress],
      checkAddressChecksum: [Function: checkAddressChecksum],
      toChecksumAddress: [Function: toChecksumAddress],
      toHex: [Function: toHex],
      toBN: [Function: toBN],
      bytesToHex: [Function: bytesToHex],
      hexToBytes: [Function: hexToBytes],
      hexToNumberString: [Function: hexToNumberString],
      hexToNumber: [Function: hexToNumber],
      toDecimal: [Function: hexToNumber],
      numberToHex: [Function: numberToHex],
      fromDecimal: [Function: numberToHex],
      hexToUtf8: [Function: hexToUtf8],
      hexToString: [Function: hexToUtf8],
      toUtf8: [Function: hexToUtf8],
      stripHexPrefix: [Function: stripHexPrefix],
      utf8ToHex: [Function: utf8ToHex],
      stringToHex: [Function: utf8ToHex],
      fromUtf8: [Function: utf8ToHex],
      hexToAscii: [Function: hexToAscii],
      toAscii: [Function: hexToAscii],
      asciiToHex: [Function: asciiToHex],
      fromAscii: [Function: asciiToHex],
      unitMap: [Object],
      toWei: [Function: toWei],
      fromWei: [Function: fromWei],
      padLeft: [Function: leftPad],
      leftPad: [Function: leftPad],
      padRight: [Function: rightPad],
      rightPad: [Function: rightPad],
      toTwosComplement: [Function: toTwosComplement],
      isBloom: [Function: isBloom],
      isUserEthereumAddressInBloom: [Function: isUserEthereumAddressInBloom],
      isContractAddressInBloom: [Function: isContractAddressInBloom],
      isTopic: [Function: isTopic],
      isTopicInBloom: [Function: isTopicInBloom],
      isInBloom: [Function: isInBloom],
      compareBlockNumbers: [Function: compareBlockNumbers]
    },
    Method: [Function: Method]
  },
  clearSubscriptions: [Function (anonymous)],
  options: {
    address: [Getter/Setter],
    jsonInterface: [Getter/Setter],
    data: undefined,
    from: undefined,
    gasPrice: undefined,
    gas: undefined
  },
  handleRevert: [Getter/Setter],
  defaultCommon: [Getter/Setter],
  defaultHardfork: [Getter/Setter],
  defaultChain: [Getter/Setter],
  transactionPollingTimeout: [Getter/Setter],
  transactionConfirmationBlocks: [Getter/Setter],
  transactionBlockTimeout: [Getter/Setter],
  defaultAccount: [Getter/Setter],
  defaultBlock: [Getter/Setter],
  methods: {
    addMoreContractFunds: [Function: bound _createTxObject],
    '0x39fa965b': [Function: bound _createTxObject],
    'addMoreContractFunds()': [Function: bound _createTxObject],
    beginContract: [Function: bound _createTxObject],
    '0x1202cfa2': [Function: bound _createTxObject],
    'beginContract()': [Function: bound _createTxObject],
    contractAmount: [Function: bound _createTxObject],
    '0x565a57ca': [Function: bound _createTxObject],
    'contractAmount()': [Function: bound _createTxObject],
    contractStarted: [Function: bound _createTxObject],
    '0x333f57b3': [Function: bound _createTxObject],
    'contractStarted()': [Function: bound _createTxObject],
    contractSubmission: [Function: bound _createTxObject],
    '0xaaa3e785': [Function: bound _createTxObject],
    'contractSubmission(uint256)': [Function: bound _createTxObject],
    endContract: [Function: bound _createTxObject],
    '0xbb6e7de9': [Function: bound _createTxObject],
    'endContract()': [Function: bound _createTxObject],
    expectedContractAmount: [Function: bound _createTxObject],
    '0x013cdaaa': [Function: bound _createTxObject],
    'expectedContractAmount()': [Function: bound _createTxObject],
    getLeaderScore: [Function: bound _createTxObject],
    '0x48fd0606': [Function: bound _createTxObject],
    'getLeaderScore()': [Function: bound _createTxObject],
    leaderAddress: [Function: bound _createTxObject],
    '0x10abda2b': [Function: bound _createTxObject],
    'leaderAddress()': [Function: bound _createTxObject],
    leaderScore: [Function: bound _createTxObject],
    '0x2e563538': [Function: bound _createTxObject],
    'leaderScore()': [Function: bound _createTxObject],
    minimumContractAmount: [Function: bound _createTxObject],
    '0xdfcd643a': [Function: bound _createTxObject],
    'minimumContractAmount()': [Function: bound _createTxObject],
    owner: [Function: bound _createTxObject],
    '0x8da5cb5b': [Function: bound _createTxObject],
    'owner()': [Function: bound _createTxObject],
    winnerWithdrawal: [Function: bound _createTxObject],
    '0x4c966822': [Function: bound _createTxObject],
    'winnerWithdrawal()': [Function: bound _createTxObject]
  },
  events: { allEvents: [Function: bound ] },
  _address: '0x3184b572F7db8F562a0BFd37B71Fef5b19De0Be2',
  _jsonInterface: [
    {
      inputs: [],
      stateMutability: 'payable',
      type: 'constructor',
      constant: undefined,
      payable: true,
      signature: 'constructor'
    },
    {
      inputs: [],
      name: 'addMoreContractFunds',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
      constant: undefined,
      payable: true,
      signature: '0x39fa965b'
    },
    {
      inputs: [],
      name: 'beginContract',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0x1202cfa2'
    },
    {
      inputs: [],
      name: 'contractAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x565a57ca'
    },
    {
      inputs: [],
      name: 'contractStarted',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x333f57b3'
    },
    {
      inputs: [Array],
      name: 'contractSubmission',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0xaaa3e785'
    },
    {
      inputs: [],
      name: 'endContract',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0xbb6e7de9'
    },
    {
      inputs: [],
      name: 'expectedContractAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x013cdaaa'
    },
    {
      inputs: [],
      name: 'getLeaderScore',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x48fd0606'
    },
    {
      inputs: [],
      name: 'leaderAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x10abda2b'
    },
    {
      inputs: [],
      name: 'leaderScore',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x2e563538'
    },
    {
      inputs: [],
      name: 'minimumContractAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0xdfcd643a'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x8da5cb5b'
    },
    {
      inputs: [],
      name: 'winnerWithdrawal',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0x4c966822'
    }
  ]
}
